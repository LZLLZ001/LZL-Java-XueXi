/*
外观(界面)模式：
    定义一个高层接口，给子系统中的一组接口提供一个一致的接口界面，用来访问子系统中的一群接口。
    外观模式通过定义一个一致的接口，用以屏蔽内部子系统的细节，
    使得调用端只需跟这个接口发生调用，而无需关心这个子系统的内部细节，
    解决多个复杂接口带来的使用困难，起到简化用户操作的作用。

理解：相当于10个家电共用一个遥控器。

实现：
    1) 外观类(Facade): 聚合子系统接口，为调用端提供统一的调用接口, 外观类知道哪些子系统负责处理请求,
        从而将调用端的请求代理给适当子系统对象
    2) 子系统的集合：指模块或者子系统，处理Facade对象指派的任务，他是功能的实际提供者
    3) 调用者(Client): 外观接口的调用者




 MyBatis 中的Configuration 去创建MetaObject 对象使用到外观模式


*/



package 结构型模式;

public class 外观模式 {
}
