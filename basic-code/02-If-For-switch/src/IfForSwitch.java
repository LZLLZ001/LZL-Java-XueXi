/*
if条件判断语句：
    写法1：
        if(关系表达式)｛
            语句体;
        ｝   //真则执行

     写法2：
        if(关系表达式) {
            语句体1;
        }else {
            语句体2;
        }   //真则执行1，假则执行2；

    写法3：
        if (判断条件1) {
            执行语句1;
        } else if (判断条件2) {
            执行语句2;
        }
         ...
        }else if (判断条件n) {
            执行语句n;
        } else {
            执行语句n+1;
        }   //只要到了某个判断条件为真，则进去执行相应的语句，并且不再往下进行判断


switch选择语句：

        switch(表达式) {
            case 常量值1:
                语句体1;
                break;
            case 常量值2:
                语句体2;
                break;
             ...
            default:
                语句体n+1;
                break;
        }

        1) switch后面小括号当中只能是下列数据类型：
                基本数据类型：byte/short/char/int（整数+字符）(若表达式结果不是整数会自动转型成整数)
                引用数据类型：String字符串、enum枚举
        2) case后面一定是一个常量值，并且常量值不能重复
        3) 遇到break则跳出语句不再往下执行
        4) 匹配哪一个case就从哪一个位置向下执行（会进入下一个case），直到遇到了break或者整体结束为止


for循环语句:
    for(初始化表达式①; 布尔表达式②; 步进表达式④){
            循环体③
    }

    1) 执行顺序：①②③④>②③④>②③④…②不满足为止,若初始值不满足②则一次都不执行
    2) 每个部分都可以省略，但是;号要保留


循环语句while:
    while (条件判断) {
        循环体
    }

    初始化语句;
    while (条件判断) {
        循环体;
        步进语句;
    }


do-while循环的标准格式：
    do {
        循环体
    } while (条件判断);   //注意这里有个;号不能漏

    初始化语句；
    do {
        循环体
        步进语句
    } while (条件判断);

    1)至少执行1次

三种循环的区别：
    1. 如果条件判断从来没有满足过，那么for循环和while循环将会执行0次，但是do-while循环会执行至少一次。
    2. for循环的变量在小括号当中定义，只有循环内部才可以使用。
        while循环和do-while循环初始化语句本来就在外面，所以出来循环之后还可以继续使用。


break关键字常见用法：
    1. 用在switch语句当中，一旦执行，整个switch语句立刻结束。
    2. 用在循环语句当中，一旦执行，整个循环语句立刻结束。打断循环。
    3. 只能跳出1层循环

continue关键字。
    1. 一旦执行，立刻跳过当前次循环剩余内容，马上开始下一次循环。


死循环标准格式：
    while (true) {
        循环体
    }


*/




public class IfForSwitch {
    public static void main(String[] args) {

        for (int i = 1; i <= 10; i++) {
            // 如果希望从第4次开始，后续全都不要了，就要打断循环
            if (i == 4) { // 如果当前是第4次
                break; // 那么就打断整个循环
            }
            System.out.println("Hello" + i);
        }


        for (int i = 1; i <= 10; i++) {
            if (i == 4) { // 如果当前是第4层
                continue; // 那么跳过当前次循环，马上开始下一次（第5层）
            }
            System.out.println(i + "层到了。");
        }
    }
}
