/*
最短路径问题：
    求加权图中一个结点到其他结点的最短路径。


迪杰斯特拉(Dijkstra)算法：
    典型最短路径算法，以起始点为中心向外层层扩展(广度优先搜索思想)，直到扩展到终点为止。

设置出发顶点为v，顶点集合V{v1,v2,vi...}，v到V中各顶点的距离构成距离集合Dis，Dis{d1,d2,di...}，
Dis集合记录着v到图中各顶点的距离(到自身可以看作0，v到vi距离对应为di)
    1）从Dis中选择值最小的di并移出Dis集合，同时移出V集合中对应的顶点vi，此时的v到vi即为最短路径
    2）更新Dis集合，更新规则为：比较v到V集合中顶点的距离值，与v通过vi到V集合中顶点的距离值，保留值较小的一个
       (同时也应该更新顶点的前驱节点为vi，表明是通过vi到达的)
    3）重复执行两步骤，直到最短路径顶点为目标顶点即可结束







*/

public class 迪杰斯特拉算法 {
}
