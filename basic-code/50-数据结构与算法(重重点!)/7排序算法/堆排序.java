/*
堆排序：
    利用堆这种数据结构而设计的一种选择排序算法，时间复杂度均为O(nlogn)速度非常快，不稳定

堆是具有以下性质的完全二叉树：
    大顶堆：每个结点的值都大于或等于其左右孩子结点的值，arr[i] >= arr[2*i+1] && arr[i] >= arr[2*i+2]
    小顶堆：每个结点的值都小于或等于其左右孩子结点的值，arr[i] <= arr[2*i+1] && arr[i] <= arr[2*i+2]
        注意 : 没有要求结点的左孩子的值和右孩子的值的大小关系。
               升序采用大顶堆，降序采用小顶堆

基本思想是：
    1) 将待排序序列构造成一个大顶堆数组：
           利用二叉树顺序存储规律，通过非叶子节点与其子节点的比较和交换进行构造。
    2) 将堆顶元素与末尾元素交换，此时末尾就为最大值;
    3) 然后将剩余n-1个元素重新构造成一个堆，循环以上步奏。















*/


public class 堆排序 {
}
