/*
基数排序：

属于“分配式排序”，通过键值的各个位的值，将要排序的元素分配至某些“桶”(一个一维数组)中，达到排序的作用
属于稳定性的排序，基数排序法的是效率高的稳定性排序法。

稳定性：数字相同时，原来在前的数字还在前面
    假定在待排序的记录序列中，存在多个具有相同的关键字的记录，若经过排序，这些记录的相对次序保持不变，
    则称这种排序算法是稳定的；否则称为不稳定的。

基数排序是经典的空间换时间的方式，占用内存很大, 当对海量数据排序时，容易造成 OutOfMemoryError


思想：
    将所有待比较数值统一为同样的数位长度，数位较短的数前面补零。
    创建一个bucket[10][arr.length]的二维数组作为“桶”(空间换时间)，第一下标为桶序号。
    然后，从最低位开始，只比较这一位数组进行一次排序：
        将数字放在此位数字对应序号的桶中，
        然后按照这个桶的顺序和桶内顺序(一维数组下标)依次取出数据，放入原来数组;
    依此为基础进行下一位的排序。
    这样从最低位排序一直到最高位排序完成(最大数位数)轮排序以后, 数列就变成一个有序序列。


















*/


public class 基数排序 {
}
